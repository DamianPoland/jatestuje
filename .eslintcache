[{"D:\\JS\\_projects\\jatestuje\\src\\index.js":"1","D:\\JS\\_projects\\jatestuje\\src\\reportWebVitals.js":"2","D:\\JS\\_projects\\jatestuje\\src\\containers\\App\\App.js":"3","D:\\JS\\_projects\\jatestuje\\src\\shared\\fire.js":"4","D:\\JS\\_projects\\jatestuje\\src\\components\\Contact\\Contact.js":"5","D:\\JS\\_projects\\jatestuje\\src\\components\\UserAds\\UserAds.js":"6","D:\\JS\\_projects\\jatestuje\\src\\shared\\constans.js":"7","D:\\JS\\_projects\\jatestuje\\src\\components\\Regulations\\Regulations.js":"8","D:\\JS\\_projects\\jatestuje\\src\\components\\Nav\\Nav.js":"9","D:\\JS\\_projects\\jatestuje\\src\\components\\Home\\Home.js":"10","D:\\JS\\_projects\\jatestuje\\src\\UI\\AlertPrivacy\\AlertPrivacy.js":"11","D:\\JS\\_projects\\jatestuje\\src\\components\\PrivacyPolicy\\PrivacyPolicy.js":"12","D:\\JS\\_projects\\jatestuje\\src\\components\\Ad\\Ad.js":"13","D:\\JS\\_projects\\jatestuje\\src\\components\\User\\User.js":"14","D:\\JS\\_projects\\jatestuje\\src\\components\\Footer\\Footer.js":"15","D:\\JS\\_projects\\jatestuje\\src\\shared\\data.js":"16","D:\\JS\\_projects\\jatestuje\\src\\UI\\Alert\\Alert.js":"17","D:\\JS\\_projects\\jatestuje\\src\\UI\\Spinner\\Spinner.js":"18","D:\\JS\\_projects\\jatestuje\\src\\components\\ListItemAd\\ListItemAd.js":"19","D:\\JS\\_projects\\jatestuje\\src\\components\\User\\LoginRegisterFirebaseUI\\LoginRegisterFirebaseUI.js":"20","D:\\JS\\_projects\\jatestuje\\src\\UI\\AlertSmall\\AlertSmall.js":"21"},{"size":515,"mtime":1611559356968,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":3944,"mtime":1614189482143,"results":"25","hashOfConfig":"23"},{"size":1248,"mtime":1614260964422,"results":"26","hashOfConfig":"23"},{"size":9448,"mtime":1613987847975,"results":"27","hashOfConfig":"23"},{"size":4124,"mtime":1614181124818,"results":"28","hashOfConfig":"23"},{"size":331,"mtime":1613740087006,"results":"29","hashOfConfig":"23"},{"size":334,"mtime":1613045561712,"results":"30","hashOfConfig":"23"},{"size":2486,"mtime":1613740103848,"results":"31","hashOfConfig":"23"},{"size":15456,"mtime":1614243988381,"results":"32","hashOfConfig":"23"},{"size":1400,"mtime":1605265466971,"results":"33","hashOfConfig":"23"},{"size":13579,"mtime":1611739019188,"results":"34","hashOfConfig":"23"},{"size":13534,"mtime":1614242285277,"results":"35","hashOfConfig":"23"},{"size":69745,"mtime":1614268861778,"results":"36","hashOfConfig":"23"},{"size":2180,"mtime":1613045448479,"results":"37","hashOfConfig":"23"},{"size":85934,"mtime":1614170085171,"results":"38","hashOfConfig":"23"},{"size":2122,"mtime":1603695166114,"results":"39","hashOfConfig":"23"},{"size":346,"mtime":1599650450834,"results":"40","hashOfConfig":"23"},{"size":1484,"mtime":1614124794245,"results":"41","hashOfConfig":"23"},{"size":2854,"mtime":1614158601270,"results":"42","hashOfConfig":"23"},{"size":2429,"mtime":1606299266075,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"yzuu5a",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\JS\\_projects\\jatestuje\\src\\index.js",[],["88","89"],"D:\\JS\\_projects\\jatestuje\\src\\reportWebVitals.js",[],"D:\\JS\\_projects\\jatestuje\\src\\containers\\App\\App.js",[],"D:\\JS\\_projects\\jatestuje\\src\\shared\\fire.js",[],"D:\\JS\\_projects\\jatestuje\\src\\components\\Contact\\Contact.js",[],"D:\\JS\\_projects\\jatestuje\\src\\components\\UserAds\\UserAds.js",[],"D:\\JS\\_projects\\jatestuje\\src\\shared\\constans.js",[],"D:\\JS\\_projects\\jatestuje\\src\\components\\Regulations\\Regulations.js",[],"D:\\JS\\_projects\\jatestuje\\src\\components\\Nav\\Nav.js",[],"D:\\JS\\_projects\\jatestuje\\src\\components\\Home\\Home.js",["90"],"import React, { useEffect, useState } from 'react'\r\nimport style from './Home.module.css'\r\nimport { firestore } from '../../shared/fire'\r\n\r\n// data\r\nimport { mainCategories, yearsProdBasic, yearsWithEmptyEl, regions, cities } from '../../shared/data'\r\n\r\n//component\r\nimport ListItemAd from '../ListItemAd/ListItemAd'\r\nimport { ReactComponent as NoData } from '../../assets/void.svg'\r\nimport AlertSmall from \"../../UI/AlertSmall/AlertSmall\"\r\nimport Spinner from '../../UI/Spinner/Spinner'\r\n\r\n\r\n\r\n\r\n\r\nconst Home = ({ allAds, setAllAds, mainCategory, setMainCategory, regionChosen, setRegionChosen, cityChosen, setCityChosen, carIdChosen, setCarIdChosen, carModelChosen, setCarModelChosen, yearFromChosen, setYearFromChosen, yearToChosen, setYearToChosen, typeChosen, setTypeChosen }) => {\r\n\r\n\r\n    // show or hide small alert\r\n    const [isAlertSmallShow, setIsAlertSmallShow] = useState(false)\r\n\r\n    // Spinner\r\n    const [isMainSpinnerShow, setIsMainSpinnerShow] = useState(false)\r\n\r\n\r\n    // ----------------------- START CATEGORIES --------------------------//\r\n\r\n    // call when click new category\r\n    const mainCategoryHandler = (nameDB) => {\r\n\r\n        // reset array\r\n        setAllAds([])\r\n\r\n        //set new category\r\n        setMainCategory(nameDB)\r\n\r\n        //clear all filters\r\n        //setRegionChosen(\"\") // no need to be cleared because in all categories is the same\r\n        //setCityChosen(\"\") // no need to be cleared because in all categories is the same\r\n        setCarIdChosen(\"\")\r\n        setCarModelChosen(\"\")\r\n        setYearFromChosen(\"\")\r\n        setYearToChosen(\"\")\r\n        setTypeChosen(\"\")\r\n        setTypeChosen(\"\")\r\n    }\r\n\r\n    // ----------------------- STOP CATEGORIES --------------------------//\r\n\r\n\r\n    // ----------------------- START FILTERS --------------------------//\r\n\r\n\r\n    // set Regions on Change\r\n    const setRegionChosenChandler = e => {\r\n        setRegionChosen(e.target.value)\r\n        setCityChosen(\"\") // reset city when region change\r\n    }\r\n\r\n    // set Car ID on Change\r\n    const setCarIdChosenChandler = e => {\r\n        setCarIdChosen(e.target.value)\r\n        setCarModelChosen(\"\") // reset model when Car ID change\r\n    }\r\n\r\n    // ----------------------- STOP FILTERS --------------------------//\r\n\r\n\r\n\r\n\r\n    // ----------------------- START ADS  --------------------------//\r\n\r\n\r\n    // load ads from DB first time\r\n    useEffect(() => {\r\n        // start query if allAds is empty\r\n        allAds.length === 0 && queryToDB(true)\r\n\r\n    }, [mainCategory])\r\n\r\n\r\n    // query to DB for items\r\n    const queryToDB = async (firstLoad) => {\r\n\r\n        // production years - get range of years, can't be more than 10 items in array because firebase can't handle that\r\n        let prodYears = yearsProdBasic\r\n        if (yearFromChosen > yearToChosen && yearToChosen) {\r\n            setIsAlertSmallShow({ alertIcon: 'error', description: 'Zły przedział.', animationTime: '2', borderColor: 'red' })\r\n            return\r\n        }\r\n        yearFromChosen && (prodYears = prodYears.filter(i => i >= yearFromChosen))\r\n        yearToChosen && (prodYears = prodYears.filter(i => i <= yearToChosen))\r\n\r\n        // show main spinner\r\n        setIsMainSpinnerShow(true)\r\n\r\n        // clear ads list if first load or filter\r\n        firstLoad && setAllAds([])\r\n\r\n        //set query constructor\r\n        let queryConstructor = firestore.collection(mainCategory)\r\n\r\n        // filters for car category only\r\n        carIdChosen && (queryConstructor = queryConstructor.where(\"carIdChosen\", \"==\", `${carIdChosen}`))\r\n        carModelChosen && (queryConstructor = queryConstructor.where(\"carModelChosen\", \"==\", `${carModelChosen}`))\r\n\r\n        // filters use for all categories\r\n        regionChosen && !cityChosen && (queryConstructor = queryConstructor.where(\"regionChosen\", \"==\", `${regionChosen}`)) // region if city is empty\r\n        cityChosen && (queryConstructor = queryConstructor.where(\"cityChosen\", \"==\", cityChosen)) // only city - no region\r\n        typeChosen && (queryConstructor = queryConstructor.where(\"typeChosen\", \"==\", `${typeChosen}`))\r\n\r\n        // main filters added always\r\n        queryConstructor = queryConstructor.where(\"yearChosen\", \"in\", prodYears) // production years array - not more then 10 items\r\n        queryConstructor = queryConstructor.where(\"isApproved\", \"==\", true) // only approwed ads\r\n        queryConstructor = queryConstructor.orderBy(\"createDate\", 'desc') // sort in field createDate, 'desc' - get from the newest to oldest\r\n        queryConstructor = queryConstructor.startAfter(firstLoad ? (new Date().getTime()) : allAds[allAds.length - 1]?.createDate) // get ads from newest or last displayed\r\n        queryConstructor = queryConstructor.limit(5) // how many items be loaded from DB on one time\r\n\r\n        try {\r\n            const query = await queryConstructor.get()\r\n\r\n            query.forEach(doc => {\r\n\r\n                // show ONLY ads valid, not older than today and tyrn off button\r\n                if (doc.data().timeValidationDate <= (new Date().getTime())) {\r\n\r\n                    // TODO turn off button nastęne\r\n\r\n                    return\r\n                }\r\n\r\n                // add new ads to State\r\n                setAllAds(prevState => [...prevState, doc.data()])\r\n\r\n                // promoted ad put extra on top, change id because Each child in a list should have a unique \"key\", in list key = id + createDate\r\n                if (doc.data().isPromoted === true) {\r\n                    const item = { ...doc.data() }\r\n                    item.createDate = `${item.createDate}1` // add only space because can't change url in browser to ad\r\n                    setAllAds(prevState => [item, ...prevState])\r\n                }\r\n            })\r\n        } catch (err) {\r\n\r\n            // show alert Error\r\n            setIsAlertSmallShow({ alertIcon: 'error', description: 'Błąd wczytywania. Spróbuj ponownie później.', animationTime: '2', borderColor: 'red' })\r\n            console.log('err get ads', err)\r\n        } finally {\r\n\r\n            // hide main spinner\r\n            setIsMainSpinnerShow(false)\r\n        }\r\n    }\r\n\r\n    // ----------------------- STOP ADS  --------------------------//\r\n\r\n\r\n\r\n    return (\r\n        <section className={style.background}>\r\n\r\n            {/* AlertSmall */}\r\n            {isAlertSmallShow && <AlertSmall alertIcon={isAlertSmallShow.alertIcon} description={isAlertSmallShow.description} animationTime={isAlertSmallShow.animationTime} borderColor={isAlertSmallShow.borderColor} hide={() => setIsAlertSmallShow(false)} />}\r\n            <div className={style.container}>\r\n\r\n                {/* DESCRIPTION */}\r\n                <div className={style.description}>\r\n\r\n                    <p className={style.description__title}>O co chodzi ... ?</p>\r\n                    <div className={style.description__textContainer}>\r\n                        <p className={style.description__text}><strong>Szukasz samochodu, motocykla, maszyny lub urzadzenia elektronicznego</strong> ale nie wiesz jaki model będzie dla Ciebie odpowiedni? <strong>Testuj różne modele</strong>, zasięgnij opinii właścicieli i <strong>dokonaj świadomego wyboru.</strong></p>\r\n                        <p className={style.description__text}><strong>Masz już samochód lub jakieś urządzenie elektroniczne?</strong> Pokaż innym i przy okazji <strong>możesz zarobić</strong>. Dodaj go do bazy i czekaj na zgłoszenie. Pokażesz swóją własność, opowiesz o niej i dostaniesz za to wcześniej ustaloną kwotę.</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* MAIN CATEGORY */}\r\n                <div className={style.categories}>\r\n                    <p className={style.title}>Kategorie</p>\r\n                    <div className={style.categories__container}>\r\n                        {mainCategories.map(item => {\r\n                            return (\r\n                                <div key={item.nameDB} className={`${style.categories__itemContainer} ${(mainCategory === item.nameDB) && style.categories__itemContainerActive}`} onClick={() => mainCategoryHandler(item.nameDB)}>\r\n                                    <figure className={style.categories__itemFigure}>\r\n                                        <img className={style.categories__itemImg} src={item.photo} alt=\"main\" />\r\n                                    </figure>\r\n                                    <p className={style.categories__itemDesc}>{item.name}</p>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* FILTERS */}\r\n                <div className={style.filter}>\r\n                    <p className={style.title}>Filtry</p>\r\n                    <div className={style.filter_container}>\r\n\r\n                        <div className={style.filter__itemContainer}>\r\n                            {/* Filter region */}\r\n                            <div className={style.filter__itemContainerSmall}>\r\n                                <p className={style.filter__itemDesc}>Województwo:</p>\r\n                                <select className={style.filter__itemList} onChange={setRegionChosenChandler} value={regionChosen}>\r\n                                    {regions.map(item => <option key={item} value={item}> {item} </option>)}\r\n                                </select>\r\n                            </div>\r\n                            {/* Filter city */}\r\n                            <div className={style.filter__itemContainerSmall}>\r\n                                <p className={style.filter__itemDesc}>Miasto:</p>\r\n                                <select disabled={!regionChosen} className={style.filter__itemList} onChange={e => setCityChosen(e.target.value)} value={cityChosen}>\r\n                                    {cities.filter(item => item.region === regionChosen).map(item => <option key={item.city} value={item.city}> {item.city} </option>)}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {/* Filter cars car brand */}\r\n                        < div className={style.filter__itemContainer}>\r\n                            {mainCategory === mainCategories[0].nameDB\r\n                                &&\r\n                                <div className={style.filter__itemContainerForCar}>\r\n                                    {/* Filter cars id (name) */}\r\n                                    <div className={style.filter__itemContainerSmall}>\r\n                                        <p className={style.filter__itemDesc}>Marka:</p>\r\n                                        <select className={style.filter__itemList} onChange={setCarIdChosenChandler} value={carIdChosen}>\r\n                                            {mainCategories[0].brand.map(item => <option key={item.id} value={item.id}>{item.name}</option>)}\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    {/* Filter cars model */}\r\n                                    <div className={style.filter__itemContainerSmall}>\r\n                                        <p className={style.filter__itemDesc}>Model:</p>\r\n                                        <select disabled={!carIdChosen} className={style.filter__itemList} onChange={e => setCarModelChosen(e.target.value)} value={carModelChosen}>\r\n                                            {mainCategories[0].brand.find(item => item.id === carIdChosen).models.map(item => <option key={item} value={item}>{item}</option>)}\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            }\r\n\r\n                            {/* Filter type */}\r\n                            <div className={style.filter__itemContainerSmall}>\r\n                                <p className={style.filter__itemDesc}>Typ:</p>\r\n                                <select className={style.filter__itemList} onChange={e => setTypeChosen(e.target.value)} value={typeChosen}>\r\n                                    {mainCategories.find(i => mainCategory === i.nameDB).type.map(item => <option key={item} value={item}>{item}</option>)}\r\n                                </select>\r\n                            </div>\r\n\r\n                            {/* Filter year */}\r\n                            <div className={style.filter__itemContainerSmall}>\r\n                                <p className={style.filter__itemDesc}>Rok produkcji:</p>\r\n                                <div className={style.filter__itemContainerItems}>\r\n                                    <select className={style.filter__itemList} onChange={e => setYearFromChosen(e.target.value)} value={yearFromChosen}>\r\n                                        {yearsWithEmptyEl.map(item => <option key={item} value={item}>{item !== \"\" ? item !== \"0\" ? item : \"pozostałe\" : \"od\"}</option>)}\r\n                                    </select>\r\n                                    <select className={style.filter__itemList} onChange={e => setYearToChosen(e.target.value)} value={yearToChosen}>\r\n                                        {yearsWithEmptyEl.map(item => <option key={item} value={item}>{item !== \"\" ? item !== \"0\" ? item : \"pozostałe\" : \"do\"}</option>)}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={style.btnContainer}>\r\n                            <button className={style.btn} onClick={() => queryToDB(true)}>Filtruj</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* ALL ADS */}\r\n                <div className={style.ads}>\r\n                    {isMainSpinnerShow && <Spinner />}\r\n                    <p className={style.title}>Ogłoszenia</p>\r\n\r\n                    {allAds.length !== 0\r\n                        ? <div>\r\n                            {allAds.map((item) => {\r\n                                return (\r\n                                    <ListItemAd key={`${item.id}${item.createDate}`} item={item} />\r\n                                )\r\n                            })\r\n                            }\r\n                            <div className={style.btnContainerBottom}>\r\n                                <button className={style.btn} onClick={() => queryToDB(false)}>Następne</button>\r\n                            </div>\r\n                        </div>\r\n                        : <div className={`${style.ads__emptyContainer} ${isMainSpinnerShow && style.ads__emptyContainerOpacity}`}>\r\n\r\n                            <div className={style.ads__emptySVG}>\r\n                                <NoData />\r\n                            </div>\r\n                            <div className={style.ads__emptyContainerDesc}>\r\n                                <p className={style.ads__emptyDescTop}>Brak ogłoszeń.</p>\r\n                                <p className={style.ads__emptyDescBottom}>Poszerz zakres wyszukiwania lub spróbuj później.</p>\r\n                            </div>\r\n\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n\r\n","D:\\JS\\_projects\\jatestuje\\src\\UI\\AlertPrivacy\\AlertPrivacy.js",[],"D:\\JS\\_projects\\jatestuje\\src\\components\\PrivacyPolicy\\PrivacyPolicy.js",[],"D:\\JS\\_projects\\jatestuje\\src\\components\\Ad\\Ad.js",[],"D:\\JS\\_projects\\jatestuje\\src\\components\\User\\User.js",["91"],"D:\\JS\\_projects\\jatestuje\\src\\components\\Footer\\Footer.js",[],"D:\\JS\\_projects\\jatestuje\\src\\shared\\data.js",[],"D:\\JS\\_projects\\jatestuje\\src\\UI\\Alert\\Alert.js",[],"D:\\JS\\_projects\\jatestuje\\src\\UI\\Spinner\\Spinner.js",[],"D:\\JS\\_projects\\jatestuje\\src\\components\\ListItemAd\\ListItemAd.js",[],"D:\\JS\\_projects\\jatestuje\\src\\components\\User\\LoginRegisterFirebaseUI\\LoginRegisterFirebaseUI.js",[],"D:\\JS\\_projects\\jatestuje\\src\\UI\\AlertSmall\\AlertSmall.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":81,"column":8,"nodeType":"98","endLine":81,"endColumn":22,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":117,"column":8,"nodeType":"98","endLine":117,"endColumn":10,"suggestions":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allAds.length' and 'queryToDB'. Either include them or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has missing dependencies: 'getUserAds' and 'userAds.length'. Either include them or remove the dependency array.",["105"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [allAds.length, mainCategory, queryToDB]",{"range":"110","text":"111"},"Update the dependencies array to be: [getUserAds, userAds.length]",{"range":"112","text":"113"},[2509,2523],"[allAds.length, mainCategory, queryToDB]",[3766,3768],"[getUserAds, userAds.length]"]